apiVersion: v1
kind: Namespace
metadata:
  name: kubezonnet
  labels:
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubezonnet-agent
  namespace: kubezonnet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubezonnet-agent
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubezonnet-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubezonnet-agent
subjects:
- kind: ServiceAccount
  name: kubezonnet-agent
  namespace: kubezonnet
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubezonnet-agent
  namespace: kubezonnet
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: main
    app.kubernetes.io/name: kubezonnet
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: main
      app.kubernetes.io/name: kubezonnet
  template:
    metadata:
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: main
        app.kubernetes.io/name: kubezonnet
    spec:
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: kubezonnet-agent
      containers:
      - name: kubezonnet-agent
        image: ghcr.io/polarsignals/kubezonnet-agent:latest
        imagePullPolicy: Always
        args:
        - -server=http://kubezonnet-server.kubezonnet.svc.cluster.local./write-network-statistics
        - -subnet-cidr=0.0.0.0/0
        - -node=$(NODE_NAME)
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubezonnet-server
  namespace: kubezonnet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubezonnet-server
rules:
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubezonnet-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubezonnet-server
subjects:
- kind: ServiceAccount
  name: kubezonnet-server
  namespace: kubezonnet
---
apiVersion: v1
kind: Service
metadata:
  name: kubezonnet-server
  namespace: kubezonnet
spec:
  selector:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: main
    app.kubernetes.io/name: kubezonnet
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubezonnet-server
  namespace: kubezonnet
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: main
      app.kubernetes.io/name: kubezonnet
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: main
        app.kubernetes.io/name: kubezonnet
    spec:
      serviceAccountName: kubezonnet-server
      containers:
      - name: kubezonnet-server
        image: ghcr.io/polarsignals/kubezonnet-server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
